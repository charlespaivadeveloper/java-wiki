{"config":{"lang":["pt"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\ud83d\udcd8 Wiki T\u00e9cnica - Java e Arquitetura de Software","text":"<p>Bem-vindo \u00e0 minha wiki t\u00e9cnica! Aqui organizo meus projetos, estudos, padr\u00f5es e boas pr\u00e1ticas com Java, arquitetura de software e DevOps.</p>"},{"location":"#projetos","title":"\ud83d\udee0\ufe0f Projetos","text":"<ul> <li>Sistema de Pedidos (CQRS + Kafka)</li> <li>API de Pagamentos (Spring Security + OAuth2)</li> </ul>"},{"location":"#arquitetura","title":"\ud83d\udcd0 Arquitetura","text":"<ul> <li>Camadas Cl\u00e1ssicas vs Hexagonal</li> <li>Event Sourcing + CQRS</li> </ul>"},{"location":"#design-patterns","title":"\ud83c\udfaf Design Patterns","text":"<ul> <li>Strategy</li> <li>Factory Method</li> </ul>"},{"location":"#estudos-tecnicos","title":"\ud83d\udcda Estudos T\u00e9cnicos","text":"<ul> <li>Boas pr\u00e1ticas com Spring Boot</li> </ul>"},{"location":"#devops-cloud","title":"\ud83d\udc33 DevOps &amp; Cloud","text":"<ul> <li>Docker para Microservi\u00e7os</li> <li>CI/CD com GitHub Actions</li> </ul>"},{"location":"arquitetura/hexagonal/","title":"Arquitetura Hexagonal (Ports and Adapters)","text":"<p>A Arquitetura Hexagonal, proposta por Alistair Cockburn, busca separar regras de neg\u00f3cio (core) de detalhes de infraestrutura (como banco, API, mensageria, etc).</p>"},{"location":"arquitetura/hexagonal/#conceitos","title":"\ud83d\udccc Conceitos","text":"<ul> <li>Dom\u00ednio (core): onde ficam os casos de uso e entidades.</li> <li>Portas (ports): interfaces que descrevem o que o dom\u00ednio precisa ou oferece.</li> <li>Adaptadores (adapters): implementa\u00e7\u00f5es das portas \u2014 como controladores REST, reposit\u00f3rios, etc.</li> </ul>"},{"location":"arquitetura/hexagonal/#exemplo-de-estrutura","title":"\ud83e\uddf1 Exemplo de Estrutura","text":"<pre><code>src/\n\u251c\u2500\u2500 application/\n\u2502   \u2514\u2500\u2500 usecases/\n\u251c\u2500\u2500 domain/\n\u2502   \u251c\u2500\u2500 model/\n\u2502   \u2514\u2500\u2500 ports/\n\u251c\u2500\u2500 infrastructure/\n\u2502   \u251c\u2500\u2500 persistence/\n\u2502   \u251c\u2500\u2500 rest/\n\u2502   \u2514\u2500\u2500 messaging/\n</code></pre>"},{"location":"arquitetura/hexagonal/#beneficios","title":"\ud83d\udcce Benef\u00edcios","text":"<ul> <li>Testabilidade: facilita testes de unidade do core.</li> <li>Independ\u00eancia tecnol\u00f3gica.</li> <li>Facilidade de manuten\u00e7\u00e3o e evolu\u00e7\u00e3o.</li> </ul>"},{"location":"arquitetura/hexagonal/#projetos-que-usam","title":"\ud83d\udd17 Projetos que usam","text":"<ul> <li>pedido-service: Implementa portas para Kafka e REST.</li> </ul>"}]}